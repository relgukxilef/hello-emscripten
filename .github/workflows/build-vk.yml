name: Build for Vulkan

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    container:
      image: emscripten/emsdk

    steps:
    - name: Install Dependencies
      run: | 
        sudo apt-get update && apt-get install -y libglfw3-dev libvulkan1
        wget -q -c https://storage.googleapis.com/shaderc/artifacts/prod/graphics_shader_compiler/shaderc/linux/continuous_clang_release/386/20220812-081917/install.tgz -O - | sudo tar -xzv --strip-components=2 -C /usr/bin install/bin
        
    - name: Install Boost
      uses: MarkusJx/install-boost@v2.4.1
      id: install-boost
      with:
          # A list of supported versions can be found here:
          # https://github.com/MarkusJx/prebuilt-boost/blob/main/versions-manifest.json
          boost_version: 1.81.0
    
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
      env:
        BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target hello-vk
